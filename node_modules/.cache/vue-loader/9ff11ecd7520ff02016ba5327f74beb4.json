{"remainingRequest":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/src/components/User/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/src/components/User/Index.vue","mtime":1670932421021},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1648128532195},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1648128532006},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/babel-loader/lib/index.js","mtime":1648128535778},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1648128532195},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/signin-helper-frontend/node_modules/vue-loader/lib/index.js","mtime":1648128535013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}