{"remainingRequest":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/Admin/Index.vue?vue&type=template&id=e72ecf06&","dependencies":[{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/Admin/Index.vue","mtime":1638695068754},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1630043765451},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1631116556383},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1630043765451},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js","mtime":1631116556383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}