{"remainingRequest":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/Admin/Index.vue?vue&type=template&id=0ea1110d&","dependencies":[{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/Admin/Index.vue","mtime":1648129031320},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1648128532195},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648128535950},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1648128532195},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js","mtime":1648128535013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}