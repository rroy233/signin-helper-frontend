{"remainingRequest":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/src/components/Admin/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/src/components/Admin/Index.vue","mtime":1663659438656},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/node_modules/babel-loader/lib/index.js","mtime":1648128535778},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1648128532195},{"path":"/Users/Roy/Documents/开发/1.已上线/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js","mtime":1648128535013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}