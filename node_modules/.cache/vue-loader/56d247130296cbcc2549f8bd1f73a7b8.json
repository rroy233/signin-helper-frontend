{"remainingRequest":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/User/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/src/components/User/Index.vue","mtime":1636114422609},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1630043765451},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/babel-loader/lib/index.js","mtime":1634886029486},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/cache-loader/dist/cjs.js","mtime":1630043765451},{"path":"/Users/Roy/Documents/开发/开发中/signin/Frontend/sign_in/node_modules/vue-loader/lib/index.js","mtime":1631116556383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}